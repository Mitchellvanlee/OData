'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'Original file name: Reference.vb
'Generation date: 8/29/2008 2:35:42 PM
Namespace SpacesPhotos
    '''<summary>
    '''There are no comments for SpacesPhotosService in the schema.
    '''</summary>
    Partial Public Class SpacesPhotosService
        Inherits Global.Microsoft.OData.Client.DataServiceContext
        '''<summary>
        '''Initialize a new SpacesPhotosService object.
        '''</summary>
        Public Sub New(ByVal serviceRoot As Global.System.Uri)
            MyBase.New(serviceRoot)
            Me.OnContextCreated
        End Sub
        Partial Private Sub OnContextCreated()
        End Sub
        '''<summary>
        '''There are no comments for Folders in the schema.
        '''</summary>
        Public ReadOnly Property Folders() As Global.Microsoft.OData.Client.DataServiceQuery(Of Folder)
            Get
                If (Me._Folders Is Nothing) Then
                    Me._Folders = MyBase.CreateQuery(Of Folder)("Folders")
                End If
                Return Me._Folders
            End Get
        End Property
        Private _Folders As Global.Microsoft.OData.Client.DataServiceQuery(Of Folder)
        '''<summary>
        '''There are no comments for Photos in the schema.
        '''</summary>
        Public ReadOnly Property Photos() As Global.Microsoft.OData.Client.DataServiceQuery(Of Photo)
            Get
                If (Me._Photos Is Nothing) Then
                    Me._Photos = MyBase.CreateQuery(Of Photo)("Photos")
                End If
                Return Me._Photos
            End Get
        End Property
        Private _Photos As Global.Microsoft.OData.Client.DataServiceQuery(Of Photo)
        '''<summary>
        '''There are no comments for ImageStreams in the schema.
        '''</summary>
        Public ReadOnly Property ImageStreams() As Global.Microsoft.OData.Client.DataServiceQuery(Of ImageStream)
            Get
                If (Me._ImageStreams Is Nothing) Then
                    Me._ImageStreams = MyBase.CreateQuery(Of ImageStream)("ImageStreams")
                End If
                Return Me._ImageStreams
            End Get
        End Property
        Private _ImageStreams As Global.Microsoft.OData.Client.DataServiceQuery(Of ImageStream)
        '''<summary>
        '''There are no comments for Folders in the schema.
        '''</summary>
        Public Sub AddToFolders(ByVal folder As Folder)
            MyBase.AddObject("Folders", folder)
        End Sub
        '''<summary>
        '''There are no comments for Photos in the schema.
        '''</summary>
        Public Sub AddToPhotos(ByVal photo As Photo)
            MyBase.AddObject("Photos", photo)
        End Sub
        '''<summary>
        '''There are no comments for ImageStreams in the schema.
        '''</summary>
        Public Sub AddToImageStreams(ByVal imageStream As ImageStream)
            MyBase.AddObject("ImageStreams", imageStream)
        End Sub
    End Class
    '''<summary>
    '''There are no comments for SpacesPhotos.Folder in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class Folder
        '''<summary>
        '''Create a new Folder object.
        '''</summary>
        '''<param name="ID">Initial value of ID.</param>
        Public Shared Function CreateFolder(ByVal ID As Integer) As Folder
            Dim folder As Folder = New Folder
            folder.ID = ID
            Return folder
        End Function
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set(value As Integer)
                Me.OnIDChanging(value)
                Me._ID = value
                Me.OnIDChanged()
            End Set
        End Property
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Name in the schema.
        '''</summary>
        Public Property Name() As String
            Get
                Return Me._Name
            End Get
            Set(value As String)
                Me.OnNameChanging(value)
                Me._Name = value
                Me.OnNameChanged()
            End Set
        End Property
        Private _Name As String
        Partial Private Sub OnNameChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnNameChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Author in the schema.
        '''</summary>
        Public Property Author() As String
            Get
                Return Me._Author
            End Get
            Set(value As String)
                Me.OnAuthorChanging(value)
                Me._Author = value
                Me.OnAuthorChanged()
            End Set
        End Property
        Private _Author As String
        Partial Private Sub OnAuthorChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnAuthorChanged()
        End Sub
        '''<summary>
        '''There are no comments for Photos in the schema.
        '''</summary>
        Public Property Photos() As Global.System.Collections.ObjectModel.Collection(Of Photo)
            Get
                Return Me._Photos
            End Get
            Set(value As Global.System.Collections.ObjectModel.Collection(Of Photo))
                If (Not (value) Is Nothing) Then
                    Me._Photos = value
                End If
            End Set
        End Property
        Private _Photos As Global.System.Collections.ObjectModel.Collection(Of Photo) = New Global.System.Collections.ObjectModel.Collection(Of Photo)
    End Class
    '''<summary>
    '''There are no comments for SpacesPhotos.Photo in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class Photo
        '''<summary>
        '''Create a new Photo object.
        '''</summary>
        '''<param name="ID">Initial value of ID.</param>
        '''<param name="version">Initial value of Version.</param>
        Public Shared Function CreatePhoto(ByVal ID As Integer, ByVal version As String) As Photo
            Dim photo As Photo = New Photo
            photo.ID = ID
            photo.Version = version
            Return photo
        End Function
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set(value As Integer)
                Me.OnIDChanging(value)
                Me._ID = value
                Me.OnIDChanged()
            End Set
        End Property
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Title in the schema.
        '''</summary>
        Public Property Title() As String
            Get
                Return Me._Title
            End Get
            Set(value As String)
                Me.OnTitleChanging(value)
                Me._Title = value
                Me.OnTitleChanged()
            End Set
        End Property
        Private _Title As String
        Partial Private Sub OnTitleChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnTitleChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Version in the schema.
        '''</summary>
        Public Property Version() As String
            Get
                Return Me._Version
            End Get
            Set(value As String)
                Me.OnVersionChanging(value)
                Me._Version = value
                Me.OnVersionChanged()
            End Set
        End Property
        Private _Version As String
        Partial Private Sub OnVersionChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnVersionChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property PhotoBytes in the schema.
        '''</summary>
        Public Property PhotoBytes() As Byte()
            Get
                If (Not (Me._PhotoBytes) Is Nothing) Then
                    Return CType(Me._PhotoBytes.Clone, Byte())
                Else
                    Return Nothing
                End If
            End Get
            Set(value As Byte())
                Me.OnPhotoBytesChanging(value)
                Me._PhotoBytes = value
                Me.OnPhotoBytesChanged()
            End Set
        End Property
        Private _PhotoBytes() As Byte
        Partial Private Sub OnPhotoBytesChanging(ByVal value() As Byte)
        End Sub
        Partial Private Sub OnPhotoBytesChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property PhotoMimeType in the schema.
        '''</summary>
        Public Property PhotoMimeType() As String
            Get
                Return Me._PhotoMimeType
            End Get
            Set(value As String)
                Me.OnPhotoMimeTypeChanging(value)
                Me._PhotoMimeType = value
                Me.OnPhotoMimeTypeChanged()
            End Set
        End Property
        Private _PhotoMimeType As String
        Partial Private Sub OnPhotoMimeTypeChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnPhotoMimeTypeChanged()
        End Sub
        '''<summary>
        '''There are no comments for ImageStreams in the schema.
        '''</summary>
        Public Property ImageStreams() As Global.System.Collections.ObjectModel.Collection(Of ImageStream)
            Get
                Return Me._ImageStreams
            End Get
            Set(value As Global.System.Collections.ObjectModel.Collection(Of ImageStream))
                If (Not (value) Is Nothing) Then
                    Me._ImageStreams = value
                End If
            End Set
        End Property
        Private _ImageStreams As Global.System.Collections.ObjectModel.Collection(Of ImageStream) = New Global.System.Collections.ObjectModel.Collection(Of ImageStream)
    End Class
    '''<summary>
    '''There are no comments for SpacesPhotos.ImageStream in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class ImageStream
        '''<summary>
        '''Create a new ImageStream object.
        '''</summary>
        '''<param name="ID">Initial value of ID.</param>
        Public Shared Function CreateImageStream(ByVal ID As Integer) As ImageStream
            Dim imageStream As ImageStream = New ImageStream
            imageStream.ID = ID
            Return imageStream
        End Function
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set(value As Integer)
                Me.OnIDChanging(Value)
                Me._ID = Value
                Me.OnIDChanged()
            End Set
        End Property
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Title in the schema.
        '''</summary>
        Public Property Title() As String
            Get
                Return Me._Title
            End Get
            Set(value As String)
                Me.OnTitleChanging(Value)
                Me._Title = Value
                Me.OnTitleChanged()
            End Set
        End Property
        Private _Title As String
        Partial Private Sub OnTitleChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnTitleChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property SizeX in the schema.
        '''</summary>
        Public Property SizeX() As Global.System.Nullable(Of Integer)
            Get
                Return Me._SizeX
            End Get
            Set(value As Global.System.Nullable(Of Integer))
                Me.OnSizeXChanging(Value)
                Me._SizeX = Value
                Me.OnSizeXChanged()
            End Set
        End Property
        Private _SizeX As Global.System.Nullable(Of Integer)
        Partial Private Sub OnSizeXChanging(ByVal value As Global.System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnSizeXChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property SizeY in the schema.
        '''</summary>
        Public Property SizeY() As Global.System.Nullable(Of Integer)
            Get
                Return Me._SizeY
            End Get
            Set(value As Global.System.Nullable(Of Integer))
                Me.OnSizeYChanging(Value)
                Me._SizeY = Value
                Me.OnSizeYChanged()
            End Set
        End Property
        Private _SizeY As Global.System.Nullable(Of Integer)
        Partial Private Sub OnSizeYChanging(ByVal value As Global.System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnSizeYChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property PreAuthURL in the schema.
        '''</summary>
        Public Property PreAuthURL() As String
            Get
                Return Me._PreAuthURL
            End Get
            Set(value As String)
                Me.OnPreAuthURLChanging(Value)
                Me._PreAuthURL = Value
                Me.OnPreAuthURLChanged()
            End Set
        End Property
        Private _PreAuthURL As String
        Partial Private Sub OnPreAuthURLChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnPreAuthURLChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property PhotoBytes in the schema.
        '''</summary>
        Public Property PhotoBytes() As Byte()
            Get
                If (Not (Me._PhotoBytes) Is Nothing) Then
                    Return CType(Me._PhotoBytes.Clone, Byte())
                Else
                    Return Nothing
                End If
            End Get
            Set(value As Byte())
                Me.OnPhotoBytesChanging(Value)
                Me._PhotoBytes = Value
                Me.OnPhotoBytesChanged()
            End Set
        End Property
        Private _PhotoBytes() As Byte
        Partial Private Sub OnPhotoBytesChanging(ByVal value() As Byte)
        End Sub
        Partial Private Sub OnPhotoBytesChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property PhotoMimeType in the schema.
        '''</summary>
        Public Property PhotoMimeType() As String
            Get
                Return Me._PhotoMimeType
            End Get
            Set(value As String)
                Me.OnPhotoMimeTypeChanging(Value)
                Me._PhotoMimeType = Value
                Me.OnPhotoMimeTypeChanged()
            End Set
        End Property
        Private _PhotoMimeType As String
        Partial Private Sub OnPhotoMimeTypeChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnPhotoMimeTypeChanged()
        End Sub
    End Class
End Namespace
