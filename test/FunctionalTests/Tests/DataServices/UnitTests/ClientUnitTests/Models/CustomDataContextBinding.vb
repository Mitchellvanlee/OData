'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4918
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'Original file name: custom.vb
'Generation date: 7/11/2009 4:58:17 PM
Namespace AstoriaClientUnitTests.Stubs
    '''<summary>
    '''There are no comments for CustomDataContext in the schema.
    '''</summary>
    Partial Public Class CustomDataContext
        Inherits Global.Microsoft.OData.Client.DataServiceContext
        '''<summary>
        '''Initialize a new CustomDataContext object.
        '''</summary>
        Public Sub New(ByVal serviceRoot As Global.System.Uri)
            MyBase.New(serviceRoot)
            Me.ResolveName = AddressOf Me.ResolveNameFromType
            Me.OnContextCreated()
        End Sub
        Partial Private Sub OnContextCreated()
        End Sub
        Private Shared ROOTNAMESPACE As String = GetType(AstoriaClientUnitTests.Stubs.CustomDataContext).Namespace.Remove(GetType(AstoriaClientUnitTests.Stubs.CustomDataContext).Namespace.LastIndexOf("AstoriaClientUnitTests.Stubs"))
        '''<summary>
        '''Since the namespace configured for this service reference
        '''in Visual Studio is different from the one indicated in the
        '''server schema, use type-mappers to map between the two.
        '''</summary>
        Protected Function ResolveNameFromType(ByVal clientType As Global.System.Type) As String
            Return clientType.FullName.Substring(ROOTNAMESPACE.Length)
        End Function
        '''<summary>
        '''There are no comments for Customers in the schema.
        '''</summary>
        Public ReadOnly Property Customers() As Global.Microsoft.OData.Client.DataServiceQuery(Of Customer)
            Get
                If (Me._Customers Is Nothing) Then
                    Me._Customers = MyBase.CreateQuery(Of Customer)("Customers")
                End If
                Return Me._Customers
            End Get
        End Property
        Private _Customers As Global.Microsoft.OData.Client.DataServiceQuery(Of Customer)
        '''<summary>
        '''There are no comments for EmptySet in the schema.
        '''</summary>
        Public ReadOnly Property EmptySet() As Global.Microsoft.OData.Client.DataServiceQuery(Of EmptySetEntity)
            Get
                If (Me._EmptySet Is Nothing) Then
                    Me._EmptySet = MyBase.CreateQuery(Of EmptySetEntity)("EmptySet")
                End If
                Return Me._EmptySet
            End Get
        End Property
        Private _EmptySet As Global.Microsoft.OData.Client.DataServiceQuery(Of EmptySetEntity)
        '''<summary>
        '''There are no comments for Orders in the schema.
        '''</summary>
        Public ReadOnly Property Orders() As Global.Microsoft.OData.Client.DataServiceQuery(Of Order)
            Get
                If (Me._Orders Is Nothing) Then
                    Me._Orders = MyBase.CreateQuery(Of Order)("Orders")
                End If
                Return Me._Orders
            End Get
        End Property
        Private _Orders As Global.Microsoft.OData.Client.DataServiceQuery(Of Order)
        '''<summary>
        '''There are no comments for Regions in the schema.
        '''</summary>
        Public ReadOnly Property Regions() As Global.Microsoft.OData.Client.DataServiceQuery(Of AstoriaClientUnitTests.StubsOtherNs.Region)
            Get
                If (Me._Regions Is Nothing) Then
                    Me._Regions = MyBase.CreateQuery(Of AstoriaClientUnitTests.StubsOtherNs.Region)("Regions")
                End If
                Return Me._Regions
            End Get
        End Property
        Private _Regions As Global.Microsoft.OData.Client.DataServiceQuery(Of AstoriaClientUnitTests.StubsOtherNs.Region)
        '''<summary>
        '''There are no comments for Products in the schema.
        '''</summary>
        Public ReadOnly Property Products() As Global.Microsoft.OData.Client.DataServiceQuery(Of Product)
            Get
                If (Me._Products Is Nothing) Then
                    Me._Products = MyBase.CreateQuery(Of Product)("Products")
                End If
                Return Me._Products
            End Get
        End Property
        Private _Products As Global.Microsoft.OData.Client.DataServiceQuery(Of Product)
        '''<summary>
        '''There are no comments for OrderDetails in the schema.
        '''</summary>
        Public ReadOnly Property OrderDetails() As Global.Microsoft.OData.Client.DataServiceQuery(Of OrderDetail)
            Get
                If (Me._OrderDetails Is Nothing) Then
                    Me._OrderDetails = MyBase.CreateQuery(Of OrderDetail)("OrderDetails")
                End If
                Return Me._OrderDetails
            End Get
        End Property
        Private _OrderDetails As Global.Microsoft.OData.Client.DataServiceQuery(Of OrderDetail)
        '''<summary>
        '''There are no comments for Customers in the schema.
        '''</summary>
        Public Sub AddToCustomers(ByVal customer As Customer)
            MyBase.AddObject("Customers", customer)
        End Sub
        '''<summary>
        '''There are no comments for EmptySet in the schema.
        '''</summary>
        Public Sub AddToEmptySet(ByVal emptySetEntity As EmptySetEntity)
            MyBase.AddObject("EmptySet", emptySetEntity)
        End Sub
        '''<summary>
        '''There are no comments for Orders in the schema.
        '''</summary>
        Public Sub AddToOrders(ByVal order As Order)
            MyBase.AddObject("Orders", order)
        End Sub
        '''<summary>
        '''There are no comments for Regions in the schema.
        '''</summary>
        Public Sub AddToRegions(ByVal region As AstoriaClientUnitTests.StubsOtherNs.Region)
            MyBase.AddObject("Regions", region)
        End Sub
        '''<summary>
        '''There are no comments for Products in the schema.
        '''</summary>
        Public Sub AddToProducts(ByVal product As Product)
            MyBase.AddObject("Products", product)
        End Sub
        '''<summary>
        '''There are no comments for OrderDetails in the schema.
        '''</summary>
        Public Sub AddToOrderDetails(ByVal orderDetail As OrderDetail)
            MyBase.AddObject("OrderDetails", orderDetail)
        End Sub
    End Class
    '''<summary>
    '''There are no comments for ComplexType AstoriaClientUnitTests.Stubs.Address in the schema.
    '''</summary>
    Partial Public Class Address
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''There are no comments for Property StreetAddress in the schema.
        '''</summary>
        Public Property StreetAddress() As String
            Get
                Return Me._StreetAddress
            End Get
            Set(ByVal value As String)
                Me.OnStreetAddressChanging(value)
                Me._StreetAddress = value
                Me.OnStreetAddressChanged()
                Me.OnPropertyChanged("StreetAddress")
            End Set
        End Property
        Private _StreetAddress As String
        Partial Private Sub OnStreetAddressChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnStreetAddressChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property City in the schema.
        '''</summary>
        Public Property City() As String
            Get
                Return Me._City
            End Get
            Set(ByVal value As String)
                Me.OnCityChanging(value)
                Me._City = value
                Me.OnCityChanged()
                Me.OnPropertyChanged("City")
            End Set
        End Property
        Private _City As String
        Partial Private Sub OnCityChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnCityChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property State in the schema.
        '''</summary>
        Public Property State() As String
            Get
                Return Me._State
            End Get
            Set(ByVal value As String)
                Me.OnStateChanging(value)
                Me._State = value
                Me.OnStateChanged()
                Me.OnPropertyChanged("State")
            End Set
        End Property
        Private _State As String
        Partial Private Sub OnStateChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnStateChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property PostalCode in the schema.
        '''</summary>
        Public Property PostalCode() As String
            Get
                Return Me._PostalCode
            End Get
            Set(ByVal value As String)
                Me.OnPostalCodeChanging(value)
                Me._PostalCode = value
                Me.OnPostalCodeChanged()
                Me.OnPropertyChanged("PostalCode")
            End Set
        End Property
        Private _PostalCode As String
        Partial Private Sub OnPostalCodeChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnPostalCodeChanged()
        End Sub
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class
    '''<summary>
    '''There are no comments for AstoriaClientUnitTests.Stubs.Customer in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.EntitySetAttribute("Customers"), _
     Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class Customer
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''Create a new Customer object.
        '''</summary>
        '''<param name="address">Initial value of Address.</param>
        '''<param name="guidValue">Initial value of GuidValue.</param>
        '''<param name="ID">Initial value of ID.</param>
        Public Shared Function CreateCustomer(ByVal address As Address, ByVal guidValue As Global.System.Guid, ByVal ID As Integer) As Customer
            Dim customer As Customer = New Customer
            If (address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address")
            End If
            customer.Address = address
            customer.GuidValue = guidValue
            customer.ID = ID
            Return customer
        End Function
        '''<summary>
        '''There are no comments for Property Address in the schema.
        '''</summary>
        Public Property Address() As Address
            Get
                If ((Me._Address Is Nothing) _
                            AndAlso (Me._AddressInitialized <> True)) Then
                    Me._Address = New Address
                    Me._AddressInitialized = True
                End If
                Return Me._Address
            End Get
            Set(ByVal value As Address)
                Me.OnAddressChanging(value)
                Me._Address = value
                Me._AddressInitialized = True
                Me.OnAddressChanged()
                Me.OnPropertyChanged("Address")
            End Set
        End Property
        Private _Address As Address
        Private _AddressInitialized As Boolean
        Partial Private Sub OnAddressChanging(ByVal value As Address)
        End Sub
        Partial Private Sub OnAddressChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property GuidValue in the schema.
        '''</summary>
        Public Property GuidValue() As Global.System.Guid
            Get
                Return Me._GuidValue
            End Get
            Set(ByVal value As Global.System.Guid)
                Me.OnGuidValueChanging(value)
                Me._GuidValue = value
                Me.OnGuidValueChanged()
                Me.OnPropertyChanged("GuidValue")
            End Set
        End Property
        Private _GuidValue As Global.System.Guid
        Partial Private Sub OnGuidValueChanging(ByVal value As Global.System.Guid)
        End Sub
        Partial Private Sub OnGuidValueChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set(ByVal value As Integer)
                Me.OnIDChanging(value)
                Me._ID = value
                Me.OnIDChanged()
                Me.OnPropertyChanged("ID")
            End Set
        End Property
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Name in the schema.
        '''</summary>
        Public Property Name() As String
            Get
                Return Me._Name
            End Get
            Set(ByVal value As String)
                Me.OnNameChanging(value)
                Me._Name = value
                Me.OnNameChanged()
                Me.OnPropertyChanged("Name")
            End Set
        End Property
        Private _Name As String
        Partial Private Sub OnNameChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnNameChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property NameAsHtml in the schema.
        '''</summary>
        Public Property NameAsHtml() As String
            Get
                Return Me._NameAsHtml
            End Get
            Set(ByVal value As String)
                Me.OnNameAsHtmlChanging(value)
                Me._NameAsHtml = value
                Me.OnNameAsHtmlChanged()
                Me.OnPropertyChanged("NameAsHtml")
            End Set
        End Property
        Private _NameAsHtml As String
        Partial Private Sub OnNameAsHtmlChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnNameAsHtmlChanged()
        End Sub
        '''<summary>
        '''There are no comments for BestFriend in the schema.
        '''</summary>
        Public Property BestFriend() As Customer
            Get
                Return Me._BestFriend
            End Get
            Set(ByVal value As Customer)
                Me._BestFriend = value
                Me.OnPropertyChanged("BestFriend")
            End Set
        End Property
        Private _BestFriend As Customer
        '''<summary>
        '''There are no comments for Orders in the schema.
        '''</summary>
        Public Property Orders() As Global.Microsoft.OData.Client.DataServiceCollection(Of Order)
            Get
                Return Me._Orders
            End Get
            Set(ByVal value As Global.Microsoft.OData.Client.DataServiceCollection(Of Order))
                Me._Orders = value
                Me.OnPropertyChanged("Orders")
            End Set
        End Property
        Private _Orders As Global.Microsoft.OData.Client.DataServiceCollection(Of Order) = New Microsoft.OData.Client.DataServiceCollection(Of Order)(Nothing, Microsoft.OData.Client.TrackingMode.None)
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class
    '''<summary>
    '''There are no comments for AstoriaClientUnitTests.Stubs.CustomerWithBirthday in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class CustomerWithBirthday
        Inherits Customer
        '''<summary>
        '''Create a new CustomerWithBirthday object.
        '''</summary>
        '''<param name="address">Initial value of Address.</param>
        '''<param name="guidValue">Initial value of GuidValue.</param>
        '''<param name="ID">Initial value of ID.</param>
        '''<param name="birthday">Initial value of Birthday.</param>
        Public Shared Function CreateCustomerWithBirthday(ByVal address As Address, ByVal guidValue As Global.System.Guid, ByVal ID As Integer, ByVal birthday As Global.System.DateTimeOffset) As CustomerWithBirthday
            Dim customerWithBirthday As CustomerWithBirthday = New CustomerWithBirthday
            If (address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address")
            End If
            customerWithBirthday.Address = address
            customerWithBirthday.GuidValue = guidValue
            customerWithBirthday.ID = ID
            customerWithBirthday.Birthday = birthday
            Return customerWithBirthday
        End Function
        '''<summary>
        '''There are no comments for Property Birthday in the schema.
        '''</summary>
        Public Property Birthday() As Global.System.DateTimeOffset
            Get
                Return Me._Birthday
            End Get
            Set(ByVal value As Global.System.DateTimeOffset)
                Me.OnBirthdayChanging(value)
                Me._Birthday = value
                Me.OnBirthdayChanged()
                Me.OnPropertyChanged("Birthday")
            End Set
        End Property
        Private _Birthday As Global.System.DateTimeOffset
        Partial Private Sub OnBirthdayChanging(ByVal value As Global.System.DateTimeOffset)
        End Sub
        Partial Private Sub OnBirthdayChanged()
        End Sub
    End Class
    '''<summary>
    '''There are no comments for AstoriaClientUnitTests.Stubs.CustomerWithoutProperties in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class CustomerWithoutProperties
        Inherits CustomerWithBirthday
        '''<summary>
        '''Create a new CustomerWithoutProperties object.
        '''</summary>
        '''<param name="address">Initial value of Address.</param>
        '''<param name="guidValue">Initial value of GuidValue.</param>
        '''<param name="ID">Initial value of ID.</param>
        '''<param name="birthday">Initial value of Birthday.</param>
        Public Shared Function CreateCustomerWithoutProperties(ByVal address As Address, ByVal guidValue As Global.System.Guid, ByVal ID As Integer, ByVal birthday As Global.System.DateTimeOffset) As CustomerWithoutProperties
            Dim customerWithoutProperties As CustomerWithoutProperties = New CustomerWithoutProperties
            If (address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("address")
            End If
            customerWithoutProperties.Address = address
            customerWithoutProperties.GuidValue = guidValue
            customerWithoutProperties.ID = ID
            customerWithoutProperties.Birthday = birthday
            Return customerWithoutProperties
        End Function
    End Class
    '''<summary>
    '''There are no comments for AstoriaClientUnitTests.Stubs.EmptySetEntity in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.EntitySetAttribute("EmptySet"), _
     Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class EmptySetEntity
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''Create a new EmptySetEntity object.
        '''</summary>
        '''<param name="ID">Initial value of ID.</param>
        Public Shared Function CreateEmptySetEntity(ByVal ID As Integer) As EmptySetEntity
            Dim emptySetEntity As EmptySetEntity = New EmptySetEntity
            emptySetEntity.ID = ID
            Return emptySetEntity
        End Function
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set(ByVal value As Integer)
                Me.OnIDChanging(value)
                Me._ID = value
                Me.OnIDChanged()
                Me.OnPropertyChanged("ID")
            End Set
        End Property
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class
    '''<summary>
    '''There are no comments for ComplexType AstoriaClientUnitTests.Stubs.CurrencyAmount in the schema.
    '''</summary>
    Partial Public Class CurrencyAmount
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''Create a new CurrencyAmount object.
        '''</summary>
        '''<param name="amount">Initial value of Amount.</param>
        Public Shared Function CreateCurrencyAmount(ByVal amount As Decimal) As CurrencyAmount
            Dim currencyAmount As CurrencyAmount = New CurrencyAmount
            currencyAmount.Amount = amount
            Return currencyAmount
        End Function
        '''<summary>
        '''There are no comments for Property Amount in the schema.
        '''</summary>
        Public Property Amount() As Decimal
            Get
                Return Me._Amount
            End Get
            Set(ByVal value As Decimal)
                Me.OnAmountChanging(value)
                Me._Amount = value
                Me.OnAmountChanged()
                Me.OnPropertyChanged("Amount")
            End Set
        End Property
        Private _Amount As Decimal
        Partial Private Sub OnAmountChanging(ByVal value As Decimal)
        End Sub
        Partial Private Sub OnAmountChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property CurrencyName in the schema.
        '''</summary>
        Public Property CurrencyName() As String
            Get
                Return Me._CurrencyName
            End Get
            Set(ByVal value As String)
                Me.OnCurrencyNameChanging(value)
                Me._CurrencyName = value
                Me.OnCurrencyNameChanged()
                Me.OnPropertyChanged("CurrencyName")
            End Set
        End Property
        Private _CurrencyName As String
        Partial Private Sub OnCurrencyNameChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnCurrencyNameChanged()
        End Sub
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class
    '''<summary>
    '''There are no comments for AstoriaClientUnitTests.Stubs.Order in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.EntitySetAttribute("Orders"), _
     Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class Order
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''Create a new Order object.
        '''</summary>
        '''<param name="ID">Initial value of ID.</param>
        '''<param name="dollarAmount">Initial value of DollarAmount.</param>
        '''<param name="currencyAmount">Initial value of CurrencyAmount.</param>
        Public Shared Function CreateOrder(ByVal ID As Integer, ByVal dollarAmount As Double, ByVal currencyAmount As CurrencyAmount) As Order
            Dim order As Order = New Order
            order.ID = ID
            order.DollarAmount = dollarAmount
            If (currencyAmount Is Nothing) Then
                Throw New Global.System.ArgumentNullException("currencyAmount")
            End If
            order.CurrencyAmount = currencyAmount
            Return order
        End Function
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set(ByVal value As Integer)
                Me.OnIDChanging(value)
                Me._ID = value
                Me.OnIDChanged()
                Me.OnPropertyChanged("ID")
            End Set
        End Property
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property DollarAmount in the schema.
        '''</summary>
        Public Property DollarAmount() As Double
            Get
                Return Me._DollarAmount
            End Get
            Set(ByVal value As Double)
                Me.OnDollarAmountChanging(value)
                Me._DollarAmount = value
                Me.OnDollarAmountChanged()
                Me.OnPropertyChanged("DollarAmount")
            End Set
        End Property
        Private _DollarAmount As Double
        Partial Private Sub OnDollarAmountChanging(ByVal value As Double)
        End Sub
        Partial Private Sub OnDollarAmountChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property CurrencyAmount in the schema.
        '''</summary>
        Public Property CurrencyAmount() As CurrencyAmount
            Get
                If ((Me._CurrencyAmount Is Nothing) _
                            AndAlso (Me._CurrencyAmountInitialized <> True)) Then
                    Me._CurrencyAmount = New CurrencyAmount
                    Me._CurrencyAmountInitialized = True
                End If
                Return Me._CurrencyAmount
            End Get
            Set(ByVal value As CurrencyAmount)
                Me.OnCurrencyAmountChanging(value)
                Me._CurrencyAmount = value
                Me._CurrencyAmountInitialized = True
                Me.OnCurrencyAmountChanged()
                Me.OnPropertyChanged("CurrencyAmount")
            End Set
        End Property
        Private _CurrencyAmount As CurrencyAmount
        Private _CurrencyAmountInitialized As Boolean
        Partial Private Sub OnCurrencyAmountChanging(ByVal value As CurrencyAmount)
        End Sub
        Partial Private Sub OnCurrencyAmountChanged()
        End Sub
        '''<summary>
        '''There are no comments for OrderDetails in the schema.
        '''</summary>
        Public Property OrderDetails() As Global.Microsoft.OData.Client.DataServiceCollection(Of OrderDetail)
            Get
                Return Me._OrderDetails
            End Get
            Set(ByVal value As Global.Microsoft.OData.Client.DataServiceCollection(Of OrderDetail))
                Me._OrderDetails = value
                Me.OnPropertyChanged("OrderDetails")
            End Set
        End Property
        Private _OrderDetails As Global.Microsoft.OData.Client.DataServiceCollection(Of OrderDetail) = New Microsoft.OData.Client.DataServiceCollection(Of OrderDetail)(Nothing, Microsoft.OData.Client.TrackingMode.None)
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class

    '''<summary>
    '''There are no comments for AstoriaClientUnitTests.Stubs.Product in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.EntitySetAttribute("Products"), _
     Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class Product
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''Create a new Product object.
        '''</summary>
        '''<param name="ID">Initial value of ID.</param>
        '''<param name="discontinued">Initial value of Discontinued.</param>
        Public Shared Function CreateProduct(ByVal ID As Integer, ByVal discontinued As Boolean) As Product
            Dim product As Product = New Product
            product.ID = ID
            product.Discontinued = discontinued
            Return product
        End Function
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set(ByVal value As Integer)
                Me.OnIDChanging(value)
                Me._ID = value
                Me.OnIDChanged()
                Me.OnPropertyChanged("ID")
            End Set
        End Property
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property ProductName in the schema.
        '''</summary>
        Public Property ProductName() As String
            Get
                Return Me._ProductName
            End Get
            Set(ByVal value As String)
                Me.OnProductNameChanging(value)
                Me._ProductName = value
                Me.OnProductNameChanged()
                Me.OnPropertyChanged("ProductName")
            End Set
        End Property
        Private _ProductName As String
        Partial Private Sub OnProductNameChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnProductNameChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Discontinued in the schema.
        '''</summary>
        Public Property Discontinued() As Boolean
            Get
                Return Me._Discontinued
            End Get
            Set(ByVal value As Boolean)
                Me.OnDiscontinuedChanging(value)
                Me._Discontinued = value
                Me.OnDiscontinuedChanged()
                Me.OnPropertyChanged("Discontinued")
            End Set
        End Property
        Private _Discontinued As Boolean
        Partial Private Sub OnDiscontinuedChanging(ByVal value As Boolean)
        End Sub
        Partial Private Sub OnDiscontinuedChanged()
        End Sub
        '''<summary>
        '''There are no comments for OrderDetails in the schema.
        '''</summary>
        Public Property OrderDetails() As Global.Microsoft.OData.Client.DataServiceCollection(Of OrderDetail)
            Get
                Return Me._OrderDetails
            End Get
            Set(ByVal value As Global.Microsoft.OData.Client.DataServiceCollection(Of OrderDetail))
                Me._OrderDetails = value
                Me.OnPropertyChanged("OrderDetails")
            End Set
        End Property
        Private _OrderDetails As Global.Microsoft.OData.Client.DataServiceCollection(Of OrderDetail) = New Microsoft.OData.Client.DataServiceCollection(Of OrderDetail)(Nothing, Microsoft.OData.Client.TrackingMode.None)
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class
    '''<summary>
    '''There are no comments for AstoriaClientUnitTests.Stubs.OrderDetail in the schema.
    '''</summary>
    '''<KeyProperties>
    '''OrderID
    '''ProductID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.EntitySetAttribute("OrderDetails"), _
     Global.Microsoft.OData.Client.KeyAttribute("OrderID", "ProductID")> _
    Partial Public Class OrderDetail
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''Create a new OrderDetail object.
        '''</summary>
        '''<param name="orderID">Initial value of OrderID.</param>
        '''<param name="productID">Initial value of ProductID.</param>
        '''<param name="unitPrice">Initial value of UnitPrice.</param>
        '''<param name="quantity">Initial value of Quantity.</param>
        Public Shared Function CreateOrderDetail(ByVal orderID As Integer, ByVal productID As Integer, ByVal unitPrice As Double, ByVal quantity As Short) As OrderDetail
            Dim orderDetail As OrderDetail = New OrderDetail
            orderDetail.OrderID = orderID
            orderDetail.ProductID = productID
            orderDetail.UnitPrice = unitPrice
            orderDetail.Quantity = quantity
            Return orderDetail
        End Function
        '''<summary>
        '''There are no comments for Property OrderID in the schema.
        '''</summary>
        Public Property OrderID() As Integer
            Get
                Return Me._OrderID
            End Get
            Set(ByVal value As Integer)
                Me.OnOrderIDChanging(value)
                Me._OrderID = value
                Me.OnOrderIDChanged()
                Me.OnPropertyChanged("OrderID")
            End Set
        End Property
        Private _OrderID As Integer
        Partial Private Sub OnOrderIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnOrderIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property ProductID in the schema.
        '''</summary>
        Public Property ProductID() As Integer
            Get
                Return Me._ProductID
            End Get
            Set(ByVal value As Integer)
                Me.OnProductIDChanging(value)
                Me._ProductID = value
                Me.OnProductIDChanged()
                Me.OnPropertyChanged("ProductID")
            End Set
        End Property
        Private _ProductID As Integer
        Partial Private Sub OnProductIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnProductIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property UnitPrice in the schema.
        '''</summary>
        Public Property UnitPrice() As Double
            Get
                Return Me._UnitPrice
            End Get
            Set(ByVal value As Double)
                Me.OnUnitPriceChanging(value)
                Me._UnitPrice = value
                Me.OnUnitPriceChanged()
                Me.OnPropertyChanged("UnitPrice")
            End Set
        End Property
        Private _UnitPrice As Double
        Partial Private Sub OnUnitPriceChanging(ByVal value As Double)
        End Sub
        Partial Private Sub OnUnitPriceChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Quantity in the schema.
        '''</summary>
        Public Property Quantity() As Short
            Get
                Return Me._Quantity
            End Get
            Set(ByVal value As Short)
                Me.OnQuantityChanging(value)
                Me._Quantity = value
                Me.OnQuantityChanged()
                Me.OnPropertyChanged("Quantity")
            End Set
        End Property
        Private _Quantity As Short
        Partial Private Sub OnQuantityChanging(ByVal value As Short)
        End Sub
        Partial Private Sub OnQuantityChanged()
        End Sub
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class
End Namespace

'Original file name: custom.vb
'Generation date: 7/11/2009 4:58:17 PM
Namespace AstoriaClientUnitTests.StubsOtherNs
    '''<summary>
    '''There are no comments for AstoriaClientUnitTests.StubsOtherNs.Region in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.EntitySetAttribute("Regions"), _
     Global.Microsoft.OData.Client.KeyAttribute("ID")> _
    Partial Public Class Region
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''Create a new Region object.
        '''</summary>
        '''<param name="ID">Initial value of ID.</param>
        Public Shared Function CreateRegion(ByVal ID As Integer) As Region
            Dim region As Region = New Region
            region.ID = ID
            Return region
        End Function
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set(ByVal value As Integer)
                Me.OnIDChanging(value)
                Me._ID = value
                Me.OnIDChanged()
                Me.OnPropertyChanged("ID")
            End Set
        End Property
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Name in the schema.
        '''</summary>
        Public Property Name() As String
            Get
                Return Me._Name
            End Get
            Set(ByVal value As String)
                Me.OnNameChanging(value)
                Me._Name = value
                Me.OnNameChanged()
                Me.OnPropertyChanged("Name")
            End Set
        End Property
        Private _Name As String
        Partial Private Sub OnNameChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnNameChanged()
        End Sub
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class
End Namespace
