//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EdmCompoundKeyContext", "CustomerOrder", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AstoriaUnitTests.CompoundKeyContext.EdmCompoundKeyContext.Customer), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AstoriaUnitTests.CompoundKeyContext.EdmCompoundKeyContext.Order))]

#endregion

namespace AstoriaUnitTests.CompoundKeyContext.EdmCompoundKeyContext
{
    #region Contexts

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EdmCompoundKeyContext : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initializes a new EdmCompoundKeyContext object using the connection string found in the 'EdmCompoundKeyContext' section of the application configuration file.
        /// </summary>
        public EdmCompoundKeyContext()
            : this(CompoundKeyContext.EntityConnection)
        {
        }

        /// <summary>
        /// Initialize a new EdmCompoundKeyContext object.
        /// </summary>
        public EdmCompoundKeyContext(EntityConnection connection)
            : base(connection, "EdmCompoundKeyContext")
        {
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }

        #endregion
    }


    #endregion

    #region Entities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EdmCompoundKeyContext", Name = "Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Customer CreateCustomer(global::System.Int32 id)
        {
            Customer customer = new Customer();
            customer.Id = id;
            return customer;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EdmCompoundKeyContext", "CustomerOrder", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("EdmCompoundKeyContext.CustomerOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("EdmCompoundKeyContext.CustomerOrder", "Order", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EdmCompoundKeyContext", Name = "Order")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Order : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="bKey">Initial value of the bKey property.</param>
        /// <param name="aKey">Initial value of the AKey property.</param>
        public static Order CreateOrder(global::System.Int32 bKey, global::System.Int32 aKey)
        {
            Order order = new Order();
            order.bKey = bKey;
            order.AKey = aKey;
            return order;
        }

        #endregion
        #region Primitive Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 bKey
        {
            get
            {
                return _bKey;
            }
            set
            {
                if (_bKey != value)
                {
                    OnbKeyChanging(value);
                    ReportPropertyChanging("bKey");
                    _bKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("bKey");
                    OnbKeyChanged();
                }
            }
        }
        private global::System.Int32 _bKey;
        partial void OnbKeyChanging(global::System.Int32 value);
        partial void OnbKeyChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 AKey
        {
            get
            {
                return _AKey;
            }
            set
            {
                if (_AKey != value)
                {
                    OnAKeyChanging(value);
                    ReportPropertyChanging("AKey");
                    _AKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AKey");
                    OnAKeyChanged();
                }
            }
        }
        private global::System.Int32 _AKey;
        partial void OnAKeyChanging(global::System.Int32 value);
        partial void OnAKeyChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EdmCompoundKeyContext", "CustomerOrder", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("EdmCompoundKeyContext.CustomerOrder", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("EdmCompoundKeyContext.CustomerOrder", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("EdmCompoundKeyContext.CustomerOrder", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("EdmCompoundKeyContext.CustomerOrder", "Customer", value);
                }
            }
        }

        #endregion
    }

    #endregion

}
