//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Data.Objects.DataClasses.EdmSchemaAttribute()]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("AstoriaUnitTests.ObjectContextStubs", "Person_Home_Ownership", "Persons", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AstoriaUnitTests.ObjectContextStubs.Person), "Homes", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AstoriaUnitTests.ObjectContextStubs.Home))]

// Original file name: CustomManyToMany.cs
// Generation date: 2/26/2008 5:51:07 PM
namespace AstoriaUnitTests.ObjectContextStubs
{
    
    /// <summary>
    /// There are no comments for CustomManyToManyContainer in the schema.
    /// </summary>
    public partial class CustomManyToManyContainer : global::System.Data.Objects.ObjectContext
    {
        /// <summary>
        /// Initializes a new CustomManyToManyContainer object using the connection string found in the 'CustomManyToManyContainer' section of the application configuration file.
        /// </summary>
        public CustomManyToManyContainer() :
            this(PopulateData.EntityConnection)
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new CustomManyToManyContainer object.
        /// </summary>
        public CustomManyToManyContainer(string connectionString) : 
                this(PopulateData.EntityConnection)
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new CustomManyToManyContainer object.
        /// </summary>
        public CustomManyToManyContainer(global::System.Data.EntityClient.EntityConnection connection) : 
                base(connection, "CustomManyToManyContainer")
        {
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// There are no comments for Persons in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public global::System.Data.Objects.ObjectQuery<Person> Persons
        {
            get
            {
                if ((this._Persons == null))
                {
                    this._Persons = base.CreateQuery<Person>("[Persons]");
                }
                return this._Persons;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Person> _Persons;
        /// <summary>
        /// There are no comments for Homes in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public global::System.Data.Objects.ObjectQuery<Home> Homes
        {
            get
            {
                if ((this._Homes == null))
                {
                    this._Homes = base.CreateQuery<Home>("[Homes]");
                }
                return this._Homes;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Home> _Homes;
        /// <summary>
        /// There are no comments for Persons in the schema.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }
        /// <summary>
        /// There are no comments for Homes in the schema.
        /// </summary>
        public void AddToHomes(Home home)
        {
            base.AddObject("Homes", home);
        }
    }
    /// <summary>
    /// There are no comments for AstoriaUnitTests.ObjectContextStubs.Person in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="AstoriaUnitTests.ObjectContextStubs", Name="Person")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Person : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Person CreatePerson(int ID, string name)
        {
            Person person = new Person();
            person.Id = ID;
            person.Name = name;
            return person;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Homes in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("AstoriaUnitTests.ObjectContextStubs", "Person_Home_Ownership", "Homes")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public global::System.Data.Objects.DataClasses.EntityCollection<Home> Homes
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Home>("AstoriaUnitTests.ObjectContextStubs.Person_Home_Ownership", "Homes");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Home>("AstoriaUnitTests.ObjectContextStubs.Person_Home_Ownership", "Homes", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for AstoriaUnitTests.ObjectContextStubs.Home in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="AstoriaUnitTests.ObjectContextStubs", Name="Home")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Home : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Home object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        /// <param name="address">Initial value of Address.</param>
        public static Home CreateHome(int ID, string address)
        {
            Home home = new Home();
            home.Id = ID;
            home.Address = address;
            return home;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Address in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                this.OnAddressChanging(value);
                this.ReportPropertyChanging("Address");
                this._Address = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Address");
                this.OnAddressChanged();
            }
        }
        private string _Address;
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        /// <summary>
        /// There are no comments for Persons in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("AstoriaUnitTests.ObjectContextStubs", "Person_Home_Ownership", "Persons")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public global::System.Data.Objects.DataClasses.EntityCollection<Person> Persons
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Person>("AstoriaUnitTests.ObjectContextStubs.Person_Home_Ownership", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Person>("AstoriaUnitTests.ObjectContextStubs.Person_Home_Ownership", "Persons", value);
                }
            }
        }
    }
}
