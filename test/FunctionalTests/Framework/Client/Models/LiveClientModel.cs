//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Original file name:
// Generation date: 9/24/2008 11:37:51 AM
namespace Client.LivePhotos.SpacesPhotos
{

    /// <summary>
    /// There are no comments for LivePhotosEntitiesX in the schema.
    /// </summary>
    public partial class LivePhotosEntities : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new LivePhotosEntitiesX object.
        /// </summary>
        public LivePhotosEntities(global::System.Uri serviceRoot) :
            base(serviceRoot)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.EntityModel.Emitters.EntityContainerEmitter", "1.0.0")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            if (typeName.StartsWith("LivePhotosModel", global::System.StringComparison.Ordinal))
            {
                return this.GetType().Assembly.GetType(string.Concat("Client.LivePhotos.SpacesPhotos", typeName.Substring(15)), true);
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.EntityModel.Emitters.EntityContainerEmitter", "1.0.0")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            if (clientType.Namespace.Equals("Client.LivePhotos.SpacesPhotos", global::System.StringComparison.Ordinal))
            {
                return string.Concat("LivePhotosModel.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// There are no comments for Folders in the schema.
        /// </summary>
        public global::Microsoft.OData.Client.DataServiceQuery<Folder> Folders
        {
            get
            {
                if ((this._Folders == null))
                {
                    this._Folders = base.CreateQuery<Folder>("Folders");
                }
                return this._Folders;
            }
        }
        private global::Microsoft.OData.Client.DataServiceQuery<Folder> _Folders;
        /// <summary>
        /// There are no comments for ImageStreams in the schema.
        /// </summary>
        public global::Microsoft.OData.Client.DataServiceQuery<ImageStreams> ImageStreams
        {
            get
            {
                if ((this._ImageStreams == null))
                {
                    this._ImageStreams = base.CreateQuery<ImageStreams>("ImageStreams");
                }
                return this._ImageStreams;
            }
        }
        private global::Microsoft.OData.Client.DataServiceQuery<ImageStreams> _ImageStreams;
        /// <summary>
        /// There are no comments for Photo in the schema.
        /// </summary>
        public global::Microsoft.OData.Client.DataServiceQuery<Photo> Photo
        {
            get
            {
                if ((this._Photo == null))
                {
                    this._Photo = base.CreateQuery<Photo>("Photo");
                }
                return this._Photo;
            }
        }
        private global::Microsoft.OData.Client.DataServiceQuery<Photo> _Photo;
        /// <summary>
        /// There are no comments for Folders in the schema.
        /// </summary>
        public void AddToFolders(Folder folder)
        {
            base.AddObject("Folders", folder);
        }
        /// <summary>
        /// There are no comments for ImageStreams in the schema.
        /// </summary>
        public void AddToImageStreams(ImageStreams imageStreams)
        {
            base.AddObject("ImageStreams", imageStreams);
        }
        /// <summary>
        /// There are no comments for Photo in the schema.
        /// </summary>
        public void AddToPhoto(Photo photo)
        {
            base.AddObject("Photo", photo);
        }
    }
    /// <summary>
    /// There are no comments for LivePhotosModel.Folder in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.KeyAttribute("ID")]
    public partial class Folder
    {
        /// <summary>
        /// Create a new Folder object.
        /// </summary>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="ID">Initial value of ID.</param>
        /// <param name="author">Initial value of Author.</param>
        public static Folder CreateFolder(string name, int ID, string author)
        {
            Folder folder = new Folder();
            folder.Name = name;
            folder.ID = ID;
            folder.Author = author;
            return folder;
        }
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property ID in the schema.
        /// </summary>
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                this.OnIDChanging(value);
                this._ID = value;
                this.OnIDChanged();
            }
        }
        private int _ID;
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        /// <summary>
        /// There are no comments for Property Author in the schema.
        /// </summary>
        public string Author
        {
            get
            {
                return this._Author;
            }
            set
            {
                this.OnAuthorChanging(value);
                this._Author = value;
                this.OnAuthorChanged();
            }
        }
        private string _Author;
        partial void OnAuthorChanging(string value);
        partial void OnAuthorChanged();
        /// <summary>
        /// There are no comments for Photos in the schema.
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<Photo> Photos
        {
            get
            {
                return this._Photos;
            }
            set
            {
                if ((value != null))
                {
                    this._Photos = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<Photo> _Photos = new global::System.Collections.ObjectModel.Collection<Photo>();
    }
    /// <summary>
    /// There are no comments for LivePhotosModel.ImageStreams in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.KeyAttribute("ID")]
    [global::Microsoft.OData.Client.MediaEntry("PhotoBytes")]
    [global::Microsoft.OData.Client.MimeTypeProperty("PhotoBytes", "PhotoMimeType")]
    public partial class ImageStreams
    {
        /// <summary>
        /// Create a new ImageStreams object.
        /// </summary>
        /// <param name="ID">Initial value of ID.</param>
        /// <param name="title">Initial value of Title.</param>
        /// <param name="photoBytes">Initial value of PhotoBytes.</param>
        /// <param name="photoMimeType">Initial value of PhotoMimeType.</param>
        public static ImageStreams CreateImageStreams(int ID, string title, byte[] photoBytes, string photoMimeType)
        {
            ImageStreams imageStreams = new ImageStreams();
            imageStreams.ID = ID;
            imageStreams.Title = title;
            imageStreams.PhotoBytes = photoBytes;
            imageStreams.PhotoMimeType = photoMimeType;
            return imageStreams;
        }
        /// <summary>
        /// There are no comments for Property ID in the schema.
        /// </summary>
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                this.OnIDChanging(value);
                this._ID = value;
                this.OnIDChanged();
            }
        }
        private int _ID;
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        /// <summary>
        /// There are no comments for Property Title in the schema.
        /// </summary>
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                this.OnTitleChanging(value);
                this._Title = value;
                this.OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        /// <summary>
        /// There are no comments for Property SizeX in the schema.
        /// </summary>
        public global::System.Nullable<int> SizeX
        {
            get
            {
                return this._SizeX;
            }
            set
            {
                this.OnSizeXChanging(value);
                this._SizeX = value;
                this.OnSizeXChanged();
            }
        }
        private global::System.Nullable<int> _SizeX;
        partial void OnSizeXChanging(global::System.Nullable<int> value);
        partial void OnSizeXChanged();
        /// <summary>
        /// There are no comments for Property SizeY in the schema.
        /// </summary>
        public global::System.Nullable<int> SizeY
        {
            get
            {
                return this._SizeY;
            }
            set
            {
                this.OnSizeYChanging(value);
                this._SizeY = value;
                this.OnSizeYChanged();
            }
        }
        private global::System.Nullable<int> _SizeY;
        partial void OnSizeYChanging(global::System.Nullable<int> value);
        partial void OnSizeYChanged();
        /// <summary>
        /// There are no comments for Property PhotoBytes in the schema.
        /// </summary>
        public byte[] PhotoBytes
        {
            get
            {
                if ((this._PhotoBytes != null))
                {
                    return ((byte[])(this._PhotoBytes.Clone()));
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OnPhotoBytesChanging(value);
                this._PhotoBytes = value;
                this.OnPhotoBytesChanged();
            }
        }
        private byte[] _PhotoBytes;
        partial void OnPhotoBytesChanging(byte[] value);
        partial void OnPhotoBytesChanged();
        /// <summary>
        /// There are no comments for Property PhotoMimeType in the schema.
        /// </summary>
        public string PhotoMimeType
        {
            get
            {
                return this._PhotoMimeType;
            }
            set
            {
                this.OnPhotoMimeTypeChanging(value);
                this._PhotoMimeType = value;
                this.OnPhotoMimeTypeChanged();
            }
        }
        private string _PhotoMimeType;
        partial void OnPhotoMimeTypeChanging(string value);
        partial void OnPhotoMimeTypeChanged();
        /// <summary>
        /// There are no comments for Photo in the schema.
        /// </summary>
        public Photo Photo
        {
            get
            {
                return this._Photo;
            }
            set
            {
                this._Photo = value;
            }
        }
        private Photo _Photo;
    }
    /// <summary>
    /// There are no comments for LivePhotosModel.Photo in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [global::Microsoft.OData.Client.KeyAttribute("ID")]
    [global::Microsoft.OData.Client.MediaEntry("PhotoBytes")]
    [global::Microsoft.OData.Client.MimeTypeProperty("PhotoBytes", "PhotoMimeType")]
    public partial class Photo
    {
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="ID">Initial value of ID.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="title">Initial value of Title.</param>
        /// <param name="version">Initial value of Version.</param>
        /// <param name="photoBytes">Initial value of PhotoBytes.</param>
        /// <param name="photoMimeType">Initial value of PhotoMimeType.</param>
        public static Photo CreatePhoto(int ID, string name, string title, string version, byte[] photoBytes, string photoMimeType)
        {
            Photo photo = new Photo();
            photo.ID = ID;
            photo.Name = name;
            photo.Title = title;
            photo.Version = version;
            photo.PhotoBytes = photoBytes;
            photo.PhotoMimeType = photoMimeType;
            return photo;
        }
        /// <summary>
        /// There are no comments for Property ID in the schema.
        /// </summary>
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                this.OnIDChanging(value);
                this._ID = value;
                this.OnIDChanged();
            }
        }
        private int _ID;
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Property Title in the schema.
        /// </summary>
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                this.OnTitleChanging(value);
                this._Title = value;
                this.OnTitleChanged();
            }
        }
        private string _Title;
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        /// <summary>
        /// There are no comments for Property Version in the schema.
        /// </summary>
        public string Version
        {
            get
            {
                return this._Version;
            }
            set
            {
                this.OnVersionChanging(value);
                this._Version = value;
                this.OnVersionChanged();
            }
        }
        private string _Version;
        partial void OnVersionChanging(string value);
        partial void OnVersionChanged();
        /// <summary>
        /// There are no comments for Property PhotoBytes in the schema.
        /// </summary>
        public byte[] PhotoBytes
        {
            get
            {
                if ((this._PhotoBytes != null))
                {
                    return ((byte[])(this._PhotoBytes.Clone()));
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OnPhotoBytesChanging(value);
                this._PhotoBytes = value;
                this.OnPhotoBytesChanged();
            }
        }
        private byte[] _PhotoBytes;
        partial void OnPhotoBytesChanging(byte[] value);
        partial void OnPhotoBytesChanged();
        /// <summary>
        /// There are no comments for Property PhotoMimeType in the schema.
        /// </summary>
        public string PhotoMimeType
        {
            get
            {
                return this._PhotoMimeType;
            }
            set
            {
                this.OnPhotoMimeTypeChanging(value);
                this._PhotoMimeType = value;
                this.OnPhotoMimeTypeChanged();
            }
        }
        private string _PhotoMimeType;
        partial void OnPhotoMimeTypeChanging(string value);
        partial void OnPhotoMimeTypeChanged();
        /// <summary>
        /// There are no comments for Folder in the schema.
        /// </summary>
        public Folder Folder
        {
            get
            {
                return this._Folder;
            }
            set
            {
                this._Folder = value;
            }
        }
        private Folder _Folder;
        /// <summary>
        /// There are no comments for ImageStreams in the schema.
        /// </summary>
        public global::System.Collections.ObjectModel.Collection<ImageStreams> ImageStreams
        {
            get
            {
                return this._ImageStreams;
            }
            set
            {
                if ((value != null))
                {
                    this._ImageStreams = value;
                }
            }
        }
        private global::System.Collections.ObjectModel.Collection<ImageStreams> _ImageStreams = new global::System.Collections.ObjectModel.Collection<ImageStreams>();
    }
}
namespace Client.GData.CodeSearch
{
    //Schema Notes for the CodeSearch feed is here : http://code.google.com/apis/codesearch/docs/2.0/reference.html
    public partial class CodeSearchResult
    {
        public string Author { get; set; }
        public string Rights { get; set; }
        public string Title { get; set; }
        public string File { get; set; }
        public Match Match { get; set; }
        public string Package { get; set; }
    }
    public class Match
    {
        public int LineNumber { get; set; }
        public string MatchText { get; set; }
    }
}
namespace Client.Flickr.AtomFeeds
{
    public class Author
    {
        public string Name { get; set; }
        public System.Uri uri { get; set; }
    }

    public class FlickrPhoto
    {
        public Author author { get; set; }
        public string IconUri { get; set; }
        public System.DateTime DateTaken { get; set; }
        public string Title { get; set; }
        public System.DateTime Published { get; set; }
    }
}

namespace Client.FriendlyFeeds.CustomTypes
{
    using Microsoft.OData.Client;
    public class DeeplyNestedType1
    {
        public string Name { get; set; }
    }
    public class DeeplyNestedType2
    {
        public DeeplyNestedType1 Child { get; set; }
        public string Name { get; set; }
    }
    public class DeeplyNestedType3
    {
        public DeeplyNestedType2 Child { get; set; }
        public string Name { get; set; }
    }
    public class DeeplyNestedType4
    {
        public DeeplyNestedType3 Child { get; set; }
        public string Name { get; set; }
    }
    public class DeeplyNestedType5
    {
        public DeeplyNestedType4 Child { get; set; }
        public string Name { get; set; }
    }
    public class DeeplyNestedType6
    {
        public DeeplyNestedType5 Child { get; set; }
        public string Name { get; set; }
    }
    public class DeeplyNestedType7
    {
        public DeeplyNestedType6 Child { get; set; }
        public string Name { get; set; }
    }

    [Key("CustomerID")]
    //"ContactName", "d", "http://docs.oasis-open.org/odata/ns/data", true)]
    public class Customers
    {
        private DeeplyNestedType8 _complexType;
        public DeeplyNestedType8 ComplexType
        {
            get
            {
                if (_complexType == null)
                {
                    _complexType = new DeeplyNestedType8()
                    {
                        Child = new DeeplyNestedType7()
                        {
                            Child = new DeeplyNestedType6()
                            {
                                Child = new DeeplyNestedType5()
                                {
                                    Child = new DeeplyNestedType4()
                                    {
                                        Child = new DeeplyNestedType3()
                                        {
                                            Child = new DeeplyNestedType2()
                                            {
                                                Child = new DeeplyNestedType1()
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    };
                }
                return _complexType;
            }
            set
            {
                _complexType = value;
            }
        }
        public string CustomerID { get; set; }
        public string ContactName { get; set; }
    }
    //
    public class DeeplyNestedType8
    {
        public DeeplyNestedType7 Child { get; set; }
        public string Name { get; set; }
    }
}